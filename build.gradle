buildscript {
    ext {
        groovyAllVersion = "2.3.11"

        lombokVersion = "1.16.8"

        //Framework de testes
        junitVersion = '4.12'
        mockitoVersion = '1.10.19'
        cucumberVersion = '1.2.4'
        gherkinVersion = '2.12.2'
        hamcrestAllVersion = '1.3'

        //Logging
        slf4jVersion = '1.7.5'

        //PDF Services
        iTextPDFVersion = '5.5.13'

        //Apache Commons
        apacheCommonsVersion = '2.6'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.slf4j:slf4j-api:${slf4jVersion}")
        classpath("org.slf4j:slf4j-log4j12:${slf4jVersion}")
    }

}

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "application"

group = 'br.com.douglasffilho'

mainClassName = group + '.PDFImagesExtractor.MainApplication'

run {
    args += ''
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

jar {
    manifest {
        attributes 'Main-Class': 'br.com.douglasffilho.PDFImagesExtractor.MainApplication'
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {
    compile("org.codehaus.groovy:groovy-all:${groovyAllVersion}")

    compile("org.projectlombok:lombok:${lombokVersion}")

    compile("org.slf4j:slf4j-api:${slf4jVersion}")
    compile("org.slf4j:slf4j-log4j12:${slf4jVersion}")

    compile("com.itextpdf:itextpdf:${iTextPDFVersion}")

    compile("commons-lang:commons-lang:${apacheCommonsVersion}")

    testCompile("junit:junit:${junitVersion}")
    testCompile("org.mockito:mockito-all:${mockitoVersion}")
    testCompile("org.mockito:mockito-core:${mockitoVersion}")
    testCompile("org.hamcrest:hamcrest-all:${hamcrestAllVersion}")
    testCompile("info.cukes:cucumber-jvm:${cucumberVersion}")
    testCompile("info.cukes:cucumber-core:${cucumberVersion}")
    testCompile("info.cukes:cucumber-java:${cucumberVersion}")
    testCompile("info.cukes:cucumber-junit:${cucumberVersion}")
    testCompile("info.cukes:cucumber-spring:${cucumberVersion}")
    testCompile("info.cukes:gherkin:${gherkinVersion}")
}
